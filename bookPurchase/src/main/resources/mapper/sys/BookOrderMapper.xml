<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.engineering.bookpurchase.order.mapper.BookOrderMapper" >
  <resultMap id="BaseResultMap" type="com.engineering.bookpurchase.order.pojo.BookOrder" >
    <id column="order_id" property="orderId" jdbcType="INTEGER" />
    <result column="book_id" property="bookId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="VARCHAR" />
    <result column="order_quantity" property="orderQuantity" jdbcType="VARCHAR" />
    <result column="total_price" property="totalPrice" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="VARCHAR" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <association property="user" javaType="com.engineering.bookpurchase.front.pojo.User">
      <id column="consumerid" jdbcType="INTEGER" property="consumerid" />
      <result column="truename" jdbcType="VARCHAR" property="truename" />
      <result column="username" jdbcType="VARCHAR" property="username" />
      <result column="password" jdbcType="VARCHAR" property="password" />
      <result column="sex" jdbcType="VARCHAR" property="sex" />
      <result column="birthday" jdbcType="VARCHAR" property="birthday" />
      <result column="address" jdbcType="VARCHAR" property="address" />
      <result column="email" jdbcType="VARCHAR" property="email" />
      <result column="phone" jdbcType="VARCHAR" property="phone" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    order_id, book_id, user_id, price, order_quantity, total_price, create_date, update_date, 
    remarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.engineering.bookpurchase.order.pojo.BookOrderExample" >
    <!--select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>-->
    select * from book_order as order3,book_user as user3
    where
    order3.user_id=user3.consumerid limit #{limit},#{page}
  </select>

  <select id="selectOrderCount" resultType="java.lang.Integer">
    select count(*) from book_detail
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from book_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from book_order
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.engineering.bookpurchase.order.pojo.BookOrderExample" >
    delete from book_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <delete id="deleteSelectByPrimaryKey" parameterType="java.util.List">
    delete from book_order
    where 1>2 or order_id in
    <foreach collection="list" index="index" item="item" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.engineering.bookpurchase.order.pojo.BookOrder" >
    insert into book_order (order_id, book_id, user_id, 
      price, order_quantity, total_price, 
      create_date, update_date, remarks
      )
    values (#{orderId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{price,jdbcType=VARCHAR}, #{orderQuantity,jdbcType=VARCHAR}, #{totalPrice,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=VARCHAR}, #{updateDate,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.engineering.bookpurchase.order.pojo.BookOrder" >
    insert into book_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="orderQuantity != null" >
        order_quantity,
      </if>
      <if test="totalPrice != null" >
        total_price,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=VARCHAR},
      </if>
      <if test="orderQuantity != null" >
        #{orderQuantity,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.engineering.bookpurchase.order.pojo.BookOrderExample" resultType="java.lang.Integer" >
    select count(*) from book_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update book_order
    <set >
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null" >
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=VARCHAR},
      </if>
      <if test="record.orderQuantity != null" >
        order_quantity = #{record.orderQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.totalPrice != null" >
        total_price = #{record.totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=VARCHAR},
      </if>
      <if test="record.updateDate != null" >
        update_date = #{record.updateDate,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update book_order
    set order_id = #{record.orderId,jdbcType=INTEGER},
      book_id = #{record.bookId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      price = #{record.price,jdbcType=VARCHAR},
      order_quantity = #{record.orderQuantity,jdbcType=VARCHAR},
      total_price = #{record.totalPrice,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=VARCHAR},
      update_date = #{record.updateDate,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.engineering.bookpurchase.order.pojo.BookOrder" >
    update book_order
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=VARCHAR},
      </if>
      <if test="orderQuantity != null" >
        order_quantity = #{orderQuantity,jdbcType=VARCHAR},
      </if>
      <if test="totalPrice != null" >
        total_price = #{totalPrice,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.engineering.bookpurchase.order.pojo.BookOrder" >
    update book_order
    set book_id = #{bookId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      price = #{price,jdbcType=VARCHAR},
      order_quantity = #{orderQuantity,jdbcType=VARCHAR},
      total_price = #{totalPrice,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>