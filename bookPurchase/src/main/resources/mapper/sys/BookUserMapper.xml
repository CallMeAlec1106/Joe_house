<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.engineering.bookpurchase.user.mapper.BookUserMapper">
  <resultMap id="BaseResultMap" type="com.engineering.bookpurchase.user.pojo.BookUser">
    <id column="consumerid" jdbcType="INTEGER" property="consumerid" />
    <result column="truename" jdbcType="VARCHAR" property="truename" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="birthday" jdbcType="VARCHAR" property="birthday" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    consumerid, truename, username, password, sex, birthday, address, email, phone
  </sql>
  <select id="selectByExample" parameterType="com.engineering.bookpurchase.user.pojo.BookUserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.engineering.bookpurchase.user.pojo.BookUserExample">
    delete from book_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.engineering.bookpurchase.user.pojo.BookUser">
    insert into book_user (consumerid, truename, username, 
      password, sex, birthday, 
      address, email, phone
      )
    values (#{consumerid,jdbcType=INTEGER}, #{truename,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{birthday,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.engineering.bookpurchase.user.pojo.BookUser">
    insert into book_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="consumerid != null">
        consumerid,
      </if>
      <if test="truename != null">
        truename,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="consumerid != null">
        #{consumerid,jdbcType=INTEGER},
      </if>
      <if test="truename != null">
        #{truename,jdbcType=VARCHAR},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.engineering.bookpurchase.user.pojo.BookUserExample" resultType="java.lang.Long">
    select count(*) from book_user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book_user
    <set>
      <if test="record.consumerid != null">
        consumerid = #{record.consumerid,jdbcType=INTEGER},
      </if>
      <if test="record.truename != null">
        truename = #{record.truename,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book_user
    set consumerid = #{record.consumerid,jdbcType=INTEGER},
      truename = #{record.truename,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <select id="selectByAllUser" parameterType="com.engineering.bookpurchase.user.pojo.BookUser" resultMap="BaseResultMap">
    select * from book_user limit #{limit},#{page}
  </select>

  <select id="selectAllUser" resultType="Integer">
    select count(*) from  book_user
  </select>

  <insert id="addUser" parameterType="bookuser" useGeneratedKeys="true"  keyProperty="consumerid">
    insert into book_user
    values
    (#{consumerid},#{truename},#{username},#{password},#{sex},#{birthday},#{address},#{email},#{phone})
  </insert>

  <delete id="deleteByConsumerId" parameterType="Integer">
    delete from book_user
    where
    consumerid = #{consumerid}
  </delete>

  <select id="selectByConsumerId" parameterType="Integer" resultType="com.engineering.bookpurchase.user.pojo.BookUser">
    select * from book_user
    where
    consumerid = #{consumerid}
  </select>

  <update id="saveUserEdit" parameterType="com.engineering.bookpurchase.user.pojo.BookUser">
    update book_user
    set
    truename = #{truename,jdbcType=VARCHAR},
    username = #{username,jdbcType=VARCHAR},
    password = #{password,jdbcType=VARCHAR},
    sex = #{sex,jdbcType=VARCHAR},
    birthday = #{birthday,jdbcType=VARCHAR},
    address = #{address,jdbcType=VARCHAR},
    email = #{email,jdbcType=VARCHAR},
    phone = #{phone,jdbcType=VARCHAR}
    where
    consumerid = #{consumerid,jdbcType=INTEGER}
  </update>

  <select id="searchByUser" parameterType="java.lang.String" resultType="com.engineering.bookpurchase.user.pojo.BookUser">
    select * from book_user
    where
    username like CONCAT(CONCAT('%', #{username}), '%');
  </select>
</mapper>